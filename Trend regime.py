# -*- coding: utf-8 -*-
"""
Created on Sun Aug 28 17:50:10 2016

@author: gopal_a
"""
"""
Created on Tue Mar 29 15:58:47 2016

@author: iRagecap
"""

import numpy as np
import pandas as pd
import pandas.io.data as web
import matplotlib.pyplot as plt


data = web.DataReader('^NSEI', data_source='yahoo',
start='1/1/2000', end='4/14/2014')

data.info()

data['Close'].plot(grid=True, figsize=(8, 5))

#data['42d'] = np.round(pd.rolling_mean(data['Close'], window=42), 2)
#data['252d'] = np.round(pd.rolling_mean(data['Close'], window=252), 2)
data['42d'] = np.round(data['Close'].rolling(window=42,center=False).mean(), 2)
data['252d'] = np.round(data['Close'].rolling(window=252,center=False).mean(), 2)


data[['Close', '42d', '252d']].tail()

data[['Close', '42d', '252d']].plot(grid=True, figsize=(8, 5))

#'''Data set is mainly complete, such that we now can devise a rule to generate
#trading signals. The rule says the following:'''
#
#'''
#Buy signal (go long)
#the 42d trend is for the first time SD points above the 252d trend.
#Wait (park in cash)
#the 42d trend is within a range of +/â€“ SD points around the 252d trend.
#Sell signal (go short)
#the 42d trend is for the first time SD points below the 252d trend.
#To this end, we add a new column to the pandas DataFrame object for the differences
#between the two trends. As you can see, numerical operations with pandas can in general
#be implemented in a vectorized fashion, in that one can take the difference between two
#whole columns:'''

data['42-252'] = data['42d'] - data['252d']
data['42-252'].tail()

data['42-252'].head(260)

SD = 50
data[['42-252','42d','252d']].plot(grid=True, figsize=(8, 5))

data['Regime'] = np.where(data['42-252'] > SD, 1, 0)
data['Regime'] = np.where(data['42-252'] < -SD, -1, data['Regime'])
data['Regime'].value_counts()

#'''In words, on x trading dates, the 42d trend lies more than SD points above the 252d
#trend. On y days, the 42d trend is more than SD points below the 252d trend.
#Obviously, if the short-term trend crosses the line of the long-term trend it tends to rest
#there for a (longer) while. This is what we call regime and what is illustrated in the next figure,
#which is generated by the following two lines of code:'''

data['Regime'].plot(lw=1.5)
plt.ylim(-1.1, 1.1)

data['Market'] = np.log(data['Close'] / data['Close'].shift(1))

data['Strategy'] = data['Regime'].shift(1) * data['Market']

data[['Market','Strategy']].cumsum().apply(np.exp).plot(grid=True,
figsize=(8, 5))


